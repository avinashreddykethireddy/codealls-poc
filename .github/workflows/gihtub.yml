#name: Quality
#on: [push, pull_request]
#jobs:
#  test:
#    name: Test with Coverage
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set up Go
#        uses: actions/setup-go@v2
#        with:
#          go-version: '1.16'
#      - name: Check out code
#        uses: actions/checkout@v2
#      - name: Install dependencies
#        run: |
#          go mod download
#      - name: Run Unit tests
#        run: |
#          go test -race -covermode atomic -coverprofile=covprofile ./...
#      - name: Install goveralls
#        run: go install github.com/mattn/goveralls@latest
#      - name: Send coverage
#        env:
#          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: goveralls -coverprofile=covprofile -service=github
name: Code Coverage

on: [pull_request]

jobs:
  base_branch_cov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Build
        run: go build -v ./...

      - name: Run test coverage
        run: go test -v ./...

      - name: test coverage to lcov format
        run: go test -coverprofile=coverage.out && gcov2lcov -infile=coverage.out -outfile=coverage.lcov

      - name: Upload code coverage for ref branch
        uses: actions/upload-artifact@v2
        with:
          name: coverage.info
          path: ./coverage.info

  checks:
    runs-on: ubuntu-latest
    needs: base_branch_cov
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Install LCOV
        run: sudo apt-get update && sudo apt-get install lcov

      - name: Download code coverage report from base branch
        uses: actions/download-artifact@v2
        with:
          name: coverage.info

      - name: Build
        run: go build -v ./...

      - name: Run test coverage
        run: go test -v ./...

#      - name: Run coverage
#        run: go test -race -covermode=atomic -coverprofile=cover.out ./...

      - name: Run coverage
        run: go test -coverprofile=coverage.out && gcov2lcov -infile=coverage.out -outfile=cover.lcov

#      - name: Upload code coverage for ref branch
#        uses: actions/upload-artifact@v2
#        with:
#          name: cover.info
#          path: ./cover.info

      #  Compares two code coverage files and generates report as a comment
      - name: Generate Code Coverage report
        id: code-coverage
        uses: barecheck/code-coverage-action@v1
        with:
          barecheck-github-app-token: ${{ secrets.BARECHECK_GITHUB_APP_TOKEN }}
          lcov-file: "./cover.info"
          base-lcov-file: "./coverage.info"
          minimum-ratio: 0 # Fails Github action once code coverage is decreasing
          send-summary-comment: true
          show-annotations: "warning" # Possible options warning|error